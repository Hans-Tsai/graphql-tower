// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Mutation Mutation 1`] = `
MutationNode {
  "_": Object {
    "afterware": Array [],
    "middleware": Array [],
    "name": "MutationNode",
    "parentArgs": undefined,
    "resolve": [Function],
  },
  "args": Object {
    "input": Object {
      "type": "MutationNodeInput!",
    },
  },
  "resolve": [Function],
  "type": "MutationNodePayload",
}
`;

exports[`Mutation Mutation with fields 1`] = `
MutationNode {
  "_": Object {
    "afterware": Array [],
    "middleware": Array [],
    "name": "Node",
    "parentArgs": undefined,
    "resolve": [Function],
  },
  "args": Object {
    "input": Object {
      "type": "NodeInput!",
    },
  },
  "resolve": [Function],
  "type": "NodePayload",
}
`;

exports[`Mutation Mutation with name 1`] = `
PropertyNode {
  "_": Object {
    "afterware": Array [],
    "middleware": Array [],
    "name": "Node",
    "parentArgs": undefined,
    "resolve": [Function],
  },
  "args": Object {
    "input": Object {
      "type": "NodeInput!",
    },
  },
  "resolve": [Function],
  "type": "NodePayload",
}
`;

exports[`Mutation Mutation with name 2`] = `
Node {
  "_": Object {
    "afterware": Array [],
    "middleware": Array [],
    "name": "Node",
    "parentArgs": undefined,
    "resolve": [Function],
  },
  "args": Object {
    "input": Object {
      "type": "NodeInput!",
    },
  },
  "resolve": [Function],
  "type": "NodePayload",
}
`;

exports[`Mutation Mutation with thunk fields 1`] = `
MutationNode {
  "_": Object {
    "afterware": Array [],
    "middleware": Array [],
    "name": "Node",
    "parentArgs": undefined,
    "resolve": [Function],
  },
  "args": Object {
    "input": Object {
      "type": "NodeInput!",
    },
  },
  "resolve": [Function],
  "type": "NodePayload",
}
`;
