// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`model model addKeyValue 1`] = `
Array [
  "select * from default_table where id in (1) and deleted_at is null",
  "update default_table set data = coalesce(data, '{}') || {\\"10\\":\\"xyz\\"} where deleted_at is null and id = 1",
]
`;

exports[`model model delKeyValue 1`] = `
Array [
  "select * from default_table where id in (2) and deleted_at is null",
  "update default_table set data = coalesce(data, '{}') - 10 where deleted_at is null and id = 2",
]
`;

exports[`model model destroy batch 1`] = `
Array [
  "select * from default_table where id in (1) and deleted_at is null",
  "select * from default_table where id in (2) and deleted_at is null",
  "update default_table set deleted_at = DATE, deleted_by = 10 where deleted_at is null and id in (1, 2)",
  "select *, count(*) OVER() AS total_count from default_table where deleted_at is null limit 1000",
]
`;

exports[`model model destroy has operator 1`] = `
Array [
  "select * from default_table where id in (1) and deleted_at is null",
  "update default_table set deleted_at = DATE, deleted_by = 10 where deleted_at is null and id in (1)",
  "update default_table set deleted_at = DATE, deleted_by = 10 where deleted_at is null and id in (1)",
]
`;

exports[`model model destroy is not soft delete 1`] = `
Array [
  "select * from default_table where id in (1)",
  "delete from default_table where id in (1)",
]
`;

exports[`model model destroy no operator 1`] = `
Array [
  "select * from default_table where id in (1) and deleted_at is null",
  "update default_table set deleted_at = DATE where deleted_at is null and id in (1)",
]
`;

exports[`model model fetch fetch one 1`] = `
Object {
  "createdAt": null,
  "createdBy": null,
  "data": null,
  "deletedAt": null,
  "deletedBy": null,
  "id": 1,
  "keyword": null,
  "name": "name is one",
  "nickName": "nick name is one",
  "password": null,
  "total": 0,
  "updatedAt": null,
  "updatedBy": null,
  "userIds": null,
}
`;

exports[`model model fetch fetch one 2`] = `
Array [
  "select * from default_table where deleted_at is null and name = name is one limit 1",
]
`;

exports[`model model fetch with where 1`] = `
Object {
  "createdAt": null,
  "createdBy": null,
  "data": null,
  "deletedAt": null,
  "deletedBy": null,
  "id": 1,
  "keyword": null,
  "name": "name is one",
  "nickName": "nick name is one",
  "password": null,
  "total": 0,
  "updatedAt": null,
  "updatedBy": null,
  "userIds": null,
}
`;

exports[`model model fetch with where 2`] = `
Array [
  "select * from default_table where nick_name = nick name is one and (name = name is one) and data IS NULL and deleted_at is null order by created_at asc limit 1",
]
`;

exports[`model model fetchAll no cache 1`] = `
Array [
  "name is one",
]
`;

exports[`model model fetchAll no cache 2`] = `
Array [
  "select *, count(*) OVER() AS total_count from default_table where deleted_at is null and name = name is one limit 1000",
]
`;

exports[`model model fetchOrInsert 1`] = `
Array [
  "select * from default_table where deleted_at is null and name = name is one limit 1",
  "select * from default_table where deleted_at is null and name = name is new limit 1",
  "insert into default_table (created_at, created_by, keyword, name, updated_at, updated_by) values (DATE, 10, name is new, name is new, DATE, 10) returning *",
]
`;

exports[`model model fetchPage not set 1`] = `
Array [
  "name is one",
  "name is two",
]
`;

exports[`model model fetchPage not set 2`] = `
Array [
  "select *, count(*) OVER() AS total_count from default_table where deleted_at is null limit 1000",
]
`;

exports[`model model fetchPage offset and first 1`] = `
Array [
  "name is two",
]
`;

exports[`model model fetchPage offset and first 2`] = `
Array [
  "select *, count(*) OVER() AS total_count from default_table where deleted_at is null limit 2 offset 1",
]
`;

exports[`model model insert of save has operator 1`] = `
Array [
  "insert into default_table (created_at, created_by, keyword, name, updated_at, updated_by) values (DATE, 10, new is insert, new is insert, DATE, 10) returning *",
  "insert into default_table (created_at, created_by, keyword, name, nick_name, updated_at, updated_by) values (DATE, 10, new is action, new is action, 'yutin', DATE, 10) returning *",
]
`;

exports[`model model insert of save no operator 1`] = `
Array [
  "insert into default_table (name) values (new is no operator insert) returning *",
]
`;

exports[`model model merge 1`] = `
Object {
  "current": Object {
    "archive": Object {
      "items": Array [
        20,
        40,
      ],
    },
    "createdAt": null,
    "createdBy": null,
    "data": null,
    "deletedAt": null,
    "deletedBy": null,
    "id": 1,
    "keyword": null,
    "name": "a name",
    "nickName": "nick name is one",
    "password": null,
    "total": 0,
    "updatedAt": null,
    "updatedBy": null,
    "userIds": null,
  },
  "previous": Object {
    "archive": Object {
      "items": Array [
        20,
        40,
      ],
    },
    "createdAt": null,
    "createdBy": null,
    "data": null,
    "deletedAt": null,
    "deletedBy": null,
    "id": 1,
    "keyword": null,
    "name": "a name",
    "nickName": "nick name is one",
    "password": null,
    "total": 0,
    "updatedAt": null,
    "updatedBy": null,
    "userIds": null,
  },
  "queryBuilder": undefined,
}
`;

exports[`model model search 1`] = `
Array [
  "new for action",
  "new for search",
]
`;

exports[`model model search 2`] = `
Array [
  "insert into default_table (created_at, created_by, keyword, name, updated_at, updated_by) values (DATE, 10, new for action, new for action, DATE, 10) returning *",
  "insert into default_table (created_at, created_by, keyword, name, updated_at, updated_by) values (DATE, 10, new for search, new for search, DATE, 10) returning *",
  "select ts_rank(keyword, new) as rank, *, count(*) OVER() AS total_count from default_table where keyword @@ to_tsquery(new) and deleted_at is null order by rank desc limit 1000",
]
`;

exports[`model model update of save has operator 1`] = `
Array [
  "select * from default_table where id in (1) and deleted_at is null",
  "update default_table set updated_by = 20, updated_at = DATE, keyword = name is update, name = name is update where deleted_at is null and id = 1 returning *",
  "update default_table set updated_by = 20, updated_at = DATE, keyword = name is action, name = name is action where deleted_at is null and id = 1 returning *",
]
`;

exports[`model model update of save no operator 1`] = `
Array [
  "select * from default_table where id in (1) and deleted_at is null",
  "update default_table set updated_by = null, updated_at = null, keyword = null, name = name is no operator update where deleted_at is null and id = 1 returning *",
]
`;

exports[`model static columns object 1`] = `
Object {
  "createdAt": DateTimeColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "createdBy": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "data": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "deletedAt": DateTimeColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "deletedBy": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "id": PrimaryKeyColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "name": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "nickName": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "password": HashColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "total": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "updatedAt": DateTimeColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "updatedBy": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "userIds": ListColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
}
`;

exports[`model static columns thunk 1`] = `
Object {
  "createdAt": DateTimeColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "data": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "deletedAt": DateTimeColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "id": PrimaryKeyColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "name": ValueColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "password": HashColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
  "updatedAt": DateTimeColumn {
    "_": Object {
      "name": undefined,
      "serialize": [Function],
    },
    "enumerable": true,
  },
}
`;

exports[`model static dataloader 1`] = `
DataLoader {
  "_batchLoadFn": [Function],
  "_options": Object {
    "cache": false,
  },
  "_promiseCache": Map {},
  "_queue": Array [],
}
`;

exports[`model static forge 1`] = `
Default {
  "_": Object {
    "current": Object {
      "name": "my name",
    },
    "previous": Object {
      "name": "my name",
    },
    "queryBuilder": undefined,
  },
  "cache": null,
  "createdAt": null,
  "createdBy": null,
  "data": null,
  "deletedAt": null,
  "deletedBy": null,
  "id": null,
  "name": "my name",
  "nickName": null,
  "password": null,
  "total": null,
  "updatedAt": null,
  "updatedBy": null,
  "userIds": Array [],
}
`;

exports[`model static load && loadMany no soft delete 1`] = `
Array [
  "insert into default_table (created_at, created_by, keyword, name, updated_at, updated_by) values (DATE, 10, for no soft delete load, for no soft delete load, DATE, 10) returning *",
  "update default_table set deleted_at = DATE, deleted_by = 10 where deleted_at is null and id in (3)",
  "select * from default_table where id in (3)",
]
`;

exports[`model static load && loadMany softDelete 1`] = `
Array [
  "select * from default_table where id in (1) and deleted_at is null",
  "select * from default_table where id in (1, 2, 1) and deleted_at is null",
]
`;

exports[`model static toGlobalId & fromGlobalId integer 1`] = `"invalid global id"`;
